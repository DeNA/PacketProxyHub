plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'

    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.eclipse.jetty.aggregate:jetty-all:9.4.35.v20201120'
    implementation 'com.google.inject:guice:5.0.1'
    implementation 'com.auth0:java-jwt:3.11.0'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.0'
    implementation 'org.mybatis:mybatis:3.5.6'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.3'
    implementation 'com.onelogin:java-saml:2.6.0'
    implementation 'org.glassfish.jersey.core:jersey-client:3.0.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.16.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.16.0'
    implementation 'com.google.api-client:google-api-client:1.31.5'

}

jar {
    doFirst {
        def serviceDir = file("${buildDir}/META-INF/services")
        serviceDir.deleteDir()
        serviceDir.mkdirs()
        for (file in configurations.runtime) {
            zipTree(file).matching { include 'META-INF/services/*' }.each { f ->
                new File(serviceDir, f.name) << f.getText("UTF-8") << "\n"
            }
        }
    }
    manifest {
        attributes(
                'Main-Class': 'com.packetproxyhub.application.App',
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(' ')
        )
    }
    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude "META-INF/**"
            }
        }
    }
    from {
        fileTree(buildDir).matching {
            include 'META-INF/services/*'
        }
    }
}

test {
    useJUnitPlatform()
}

application {
    // Define the main class for the application.
    mainClass = 'com.packetproxyhub.application.App'
}
